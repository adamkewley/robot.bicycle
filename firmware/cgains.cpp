#include "cgains.h"

namespace cg {
	it_t CGArray::upper_bound(const_it_t first,
							  const_it_t last, float value) const {
		it_t it;
		it_t front = const_cast<it_t>(first);
		std::iterator_traits<it_t>::difference_type count, step;
		count = std::distance(front, const_cast<it_t>(last));
		while (count > 0) {
			it = front;
			step = count / 2;
			std::advance(it, step);
			if (value >= it->theta_R_dot) {
				front = ++it;
				count -= step + 1;
			} else {
				count = step;
			}
		}
		return front;
	}
	ControllerGains* CGArray::operator[](float x) const {
		auto upper = upper_bound(cg_array.begin(), cg_array.end(), x);
		if (upper == cg_array.begin())
			return upper;
		auto lower = upper - 1;
		if (upper == cg_array.end())
			return lower;
		if ((x - lower->theta_R_dot) < (upper->theta_R_dot - x))
			return lower;
		return upper;
	}
	CGArray gains {{{
	/* ------------------ AUTOGENERATED CODE STARTS HERE ------------------- */
		{ /* -------------- CONTROLLER GAINS FOR SPEED 0 START -------------- */
			{{ /* Matrix A in rowmajor order */
				1.01700103288f,
				-0.00768809912454f,
				0.000953310311559f,
				0.000352389470452f,
				-0.000343851386218f,
				0.0646878002103f,
				0.91756837652f,
				0.0187285609567f,
				0.0060089363904f,
				-0.0012780450189f,
				-2.28643023005f,
				-0.252616704234f,
				0.175020480913f,
				-0.0537324388006f,
				0.0462032305594f,
				28.6421532515f,
				2.37667197069f,
				8.18366465477f,
				1.64157785349f,
				-0.566019840519f,
				-0.0f,
				-0.00151349983403f,
				-0.0f,
				-0.000847049986337f,
				1.0f
			}},
			{{ /* Matrix B in rowmajor order */
				0.0f,
				0.00960143532154f,
				0.00901860502667f,
				0.0f,
				0.0896773638898f,
				-0.000244547179717f,
				0.0f,
				-0.00465749018919f,
				0.156883163825f,
				0.0f,
				0.831713340256f,
				0.00253322859825f,
				0.005f,
				0.0f,
				0.0f
			}},
			{{ /* Matrix C in rowmajor order */
				860.053101166f,
				89.9914990743f,
				245.952596382f,
				19.5279752035f,
				-17.0140007268f
			}},
			-0.941413465656f /* theta_R_dot at speed */
		}, /* -------------- CONTROLLER GAINS FOR SPEED 0 END --------------- */
		{ /* -------------- CONTROLLER GAINS FOR SPEED 1 START -------------- */
			{{ /* Matrix A in rowmajor order */
				1.00766651742f,
				-0.00942180858553f,
				-0.00163468547723f,
				0.000100166327386f,
				-0.000340621299584f,
				0.0302664054568f,
				0.917629714093f,
				0.00898879145196f,
				0.00507871035392f,
				-0.00127813077643f,
				-1.04881598779f,
				-0.119133096837f,
				0.529245099256f,
				-0.0206085096563f,
				0.0465029681485f,
				13.3936629656f,
				0.807593293867f,
				3.82190861362f,
				1.22185658444f,
				-0.566012554286f,
				-0.0f,
				-0.00301982918255f,
				-0.0f,
				-0.000847049986337f,
				1.0f
			}},
			{{ /* Matrix B in rowmajor order */
				0.0f,
				0.0103422585856f,
				0.00893587187376f,
				0.0f,
				0.0859137885777f,
				-0.000349787849118f,
				0.0f,
				-0.00665913175016f,
				0.156565950913f,
				0.0f,
				0.761049463288f,
				0.00382375218604f,
				0.005f,
				0.0f,
				0.0f
			}},
			{{ /* Matrix C in rowmajor order */
				402.546289828f,
				40.8387502683f,
				115.010091035f,
				7.04865806705f,
				-17.0496575302f
			}},
			-1.87836681083f /* theta_R_dot at speed */
		}, /* -------------- CONTROLLER GAINS FOR SPEED 1 END --------------- */
		{ /* -------------- CONTROLLER GAINS FOR SPEED 2 START -------------- */
			{{ /* Matrix A in rowmajor order */
				1.0032661726f,
				-0.0113792854144f,
				-0.00271433241334f,
				-1.28786398411e-05f,
				-0.000333066912609f,
				0.0140352468417f,
				0.922711201894f,
				0.00453937945702f,
				0.00465959419279f,
				-0.00127812791668f,
				-0.464415222843f,
				-0.0469420226077f,
				0.697238291305f,
				-0.00625268592747f,
				0.0471080472092f,
				6.20037961822f,
				0.0178653877112f,
				1.7593621548f,
				1.02189303901f,
				-0.566024910129f,
				-0.0f,
				-0.00602535136559f,
				-0.0f,
				-0.000847049986337f,
				1.0f
			}},
			{{ /* Matrix B in rowmajor order */
				0.0f,
				0.0117864693475f,
				0.00875245749147f,
				0.0f,
				0.0787631630387f,
				-0.000551465043118f,
				0.0f,
				-0.0105046269502f,
				0.155909001f,
				0.0f,
				0.635956418702f,
				0.00669201907375f,
				0.005f,
				0.0f,
				0.0f
			}},
			{{ /* Matrix C in rowmajor order */
				186.653527188f,
				13.5125199894f,
				52.9652173663f,
				1.27608036155f,
				-17.121951064f
			}},
			-3.74783451133f /* theta_R_dot at speed */
		}, /* -------------- CONTROLLER GAINS FOR SPEED 2 END --------------- */
		{ /* -------------- CONTROLLER GAINS FOR SPEED 3 START -------------- */
			{{ /* Matrix A in rowmajor order */
				1.00123197852f,
				-0.0143110756803f,
				-0.00286571876219f,
				-5.47227434423e-05f,
				-0.000313231329418f,
				0.00652892547568f,
				0.934149669777f,
				0.00274337774303f,
				0.00449551648797f,
				-0.00127722556264f,
				-0.193238524468f,
				-0.0120667074831f,
				0.776748423177f,
				-0.00213646835852f,
				0.0483368987424f,
				2.86815696056f,
				-0.413641901286f,
				0.793186539678f,
				0.924554605567f,
				-0.56608227318f,
				-0.0f,
				-0.0120221565142f,
				-0.0f,
				-0.000847049986337f,
				1.0f
			}},
			{{ /* Matrix B in rowmajor order */
				0.0f,
				0.0145143875821f,
				0.00831089069509f,
				0.0f,
				0.0658804890098f,
				-0.000923954542711f,
				0.0f,
				-0.0176503380392f,
				0.15452759302f,
				0.0f,
				0.440563670189f,
				0.0131666091105f,
				0.005f,
				0.0f,
				0.0f
			}},
			{{ /* Matrix C in rowmajor order */
				86.5890944395f,
				-4.85623049054f,
				23.6889349127f,
				-1.18413865513f,
				-17.2688134095f
			}},
			-7.4779129632f /* theta_R_dot at speed */
		}, /* -------------- CONTROLLER GAINS FOR SPEED 3 END --------------- */
		{ /* -------------- CONTROLLER GAINS FOR SPEED 4 START -------------- */
			{{ /* Matrix A in rowmajor order */
				1.00035912014f,
				-0.0185476787806f,
				-0.00196195205636f,
				-5.87259221966e-05f,
				-0.000253718911878f,
				0.00331757218036f,
				0.953542455666f,
				0.00238506285143f,
				0.00445385547718f,
				-0.00127392945978f,
				-0.0767911695877f,
				-0.0481958488794f,
				0.813869117258f,
				-0.00543993837308f,
				0.0508235222488f,
				1.43128555075f,
				-0.729786959011f,
				0.357424468636f,
				0.870525583874f,
				-0.565848435349f,
				-0.0f,
				-0.0239873558375f,
				-0.0f,
				-0.000847049986337f,
				1.0f
			}},
			{{ /* Matrix B in rowmajor order */
				0.0f,
				0.0189930565622f,
				0.00713351305683f,
				0.0f,
				0.0450449547943f,
				-0.00151931443784f,
				0.0f,
				-0.0293237950757f,
				0.151728518206f,
				0.0f,
				0.204264762535f,
				0.0270406357172f,
				0.005f,
				0.0f,
				0.0f
			}},
			{{ /* Matrix C in rowmajor order */
				43.5049860339f,
				-19.6417000434f,
				10.1174343034f,
				-1.87007157362f,
				-17.5582848219f
			}},
			-14.9203979301f /* theta_R_dot at speed */
		}, /* -------------- CONTROLLER GAINS FOR SPEED 4 END --------------- */
		{ /* -------------- CONTROLLER GAINS FOR SPEED 5 START -------------- */
			{{ /* Matrix A in rowmajor order */
				1.00004491904f,
				-0.0205231453587f,
				0.00056279174709f,
				-5.88119476145e-05f,
				-0.000104347994428f,
				0.00215188478561f,
				0.97737973802f,
				0.00226354726857f,
				0.00441841926939f,
				-0.00128980137141f,
				-0.0360114731066f,
				-0.368515595413f,
				0.830620258965f,
				-0.0169787899237f,
				0.0555568240309f,
				0.887445141637f,
				-1.14735202848f,
				0.182270607979f,
				0.820253303829f,
				-0.560535874656f,
				-0.0f,
				-0.0478610671382f,
				-0.0f,
				-0.000847049986337f,
				1.0f
			}},
			{{ /* Matrix B in rowmajor order */
				0.0f,
				0.0215059624599f,
				0.00448020943804f,
				0.0f,
				0.0189793546937f,
				-0.00172659984232f,
				0.0f,
				-0.0351419610696f,
				0.146390814919f,
				0.0f,
				0.0371822348015f,
				0.0509888739434f,
				0.005f,
				0.0f,
				0.0f
			}},
			{{ /* Matrix C in rowmajor order */
				27.5970006707f,
				-29.5976779931f,
				3.88028895605f,
				-1.51043547478f,
				-18.0097364073f
			}},
			-29.7701077142f /* theta_R_dot at speed */
		} /* --------------- CONTROLLER GAINS FOR SPEED 5 END --------------- */
	}}}; /* gains */
} /* namespace cg */